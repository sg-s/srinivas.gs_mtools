% copies a set of files over to a remote
% machine. tries to make 10 copies, so that
% we can balance minimixing SSH connections
% and getting some feedback about the copy
% progress

function copyFiles(files, server_loc)


assert(length(strfind(server_loc,':'))==1,'Location on server not specified')

server_name = server_loc(1:strfind(server_loc,':')-1);

assert(netlib.ping(server_name),'Server is down')
assert(isstruct(files),'First argument should be a structure generated by dir')
assert(length(unique({files.folder})) == 1,'All files should be in the same folder')



if length(files) < 10
	error('Not coded yet')

	% single shot

	return

end

% make 10 folders in the folder
for i = 0:9
	mkdir(files(1).folder, ['m_n_c_' mat2str(i)])
end


% distribute into these folders
for i = 1:length(files)
	this_folder = ['m_n_c_' mat2str(rem(i,10))];

	copyfile([files(i).folder filesep files(i).name],[files(i).folder filesep this_folder  filesep files(i).name])

end

% now copy the contents of each of these 10 folders
for i = 1:10
	corelib.textbar(i,10);
	this_folder = ['m_n_c_' mat2str(i-1)];

	[e,~] = system(['scp ' files(1).folder filesep this_folder filesep '* ' server_loc]);
	assert(e == 0,' Error copying files to server')

end

% nuke the directories we created
for i = 1:10
	this_folder = ['m_n_c_' mat2str(i-1)];
	rmdir([files(1).folder filesep this_folder],'s')
end